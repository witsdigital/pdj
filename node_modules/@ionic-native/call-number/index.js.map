{"version":3,"sources":["../../../src/@ionic-native/plugins/call-number/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,MAAA,EAAQ,OAAA,EAAS,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AACxE;;;;;;;;;;;;;;;;;;;;GAoBG;AASH,IAAa,UAAU;IAAS,8BAAiB;IAAjD;;IAqBA,CAAC;IAnBC;;;;;OAKG;IAIH,+BAAU,GAAV,UAAW,YAAoB,EAAE,gBAAyB;QACxD,MAAM,CAAC;IACT,CAAC;IAQH,iBAAC;AAAD,CArBA,AAqBC,CArB+B,iBAAiB,GAqBhD;AANM,qBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,yBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AATA;IAHC,OAAO,CAAC;QACP,aAAa,EAAE,SAAS;KACzB,CAAC;;;;4CAGD;AAbU,UAAU;IARtB,MAAM,CAAC;QACN,UAAU,EAAE,YAAY;QACxB,MAAM,EAAE,aAAa;QACrB,SAAS,EAAE,oBAAoB;QAC/B,IAAI,EAAE,qDAAqD;QAC3D,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;KAC9B,CAAC;GAEW,UAAU,CAqBtB;SArBY,UAAU","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\r\n/**\r\n * @name Call Number\r\n * @description\r\n * Call a number directly from your Cordova/Ionic application.\r\n * **NOTE**: The iOS Simulator (and maybe Android Simulators) do not provide access to the phone subsystem.\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { CallNumber } from '@ionic-native/call-number';\r\n *\r\n * constructor(private callNumber: CallNumber) { }\r\n *\r\n * ...\r\n *\r\n *\r\n * this.callNumber.callNumber(\"18001010101\", true)\r\n *   .then(() => console.log('Launched dialer!'))\r\n *   .catch(() => console.log('Error launching dialer'));\r\n *\r\n * ```\r\n */\r\n@Plugin({\r\n  pluginName: 'CallNumber',\r\n  plugin: 'call-number',\r\n  pluginRef: 'plugins.CallNumber',\r\n  repo: 'https://github.com/Rohfosho/CordovaCallNumberPlugin',\r\n  platforms: ['Android', 'iOS']\r\n})\r\n\r\nexport class CallNumber extends IonicNativePlugin {\r\n\r\n  /**\r\n   * Calls a phone number\r\n   * @param numberToCall {string} The phone number to call as a string\r\n   * @param bypassAppChooser {boolean} Set to true to bypass the app chooser and go directly to dialer\r\n   * @return {Promise<any>}\r\n   */\r\n  @Cordova({\r\n    callbackOrder: 'reverse'\r\n  })\r\n  callNumber(numberToCall: string, bypassAppChooser: boolean): Promise<any> {\r\n    return;\r\n  }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}