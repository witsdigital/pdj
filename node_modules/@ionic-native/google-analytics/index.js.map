{"version":3,"sources":["../../../src/@ionic-native/plugins/google-analytics/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,OAAA,EAAS,MAAA,EAAQ,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAExE;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2BG;AASH;IAAqC,mCAAiB;IAAtD;;IAmLA,CAAC;IAjLC;;;;;;OAMG;IAKH,4CAAkB,GAAlB,UAAmB,EAAU,EAAE,QAAiB,IAAkB,MAAM,CAAC,CAAC,CAAC;IAE3E;;;;OAIG;IAEH,gDAAsB,GAAtB,UAAuB,KAAc,IAAkB,MAAM,CAAC,CAAC,CAAC;IAEhE;;;;;OAKG;IAEH,mCAAS,GAAT,UAAU,EAAU,IAAkB,MAAM,CAAC,CAAC,CAAC;IAE/C;;;;OAIG;IAEH,wCAAc,GAAd,UAAe,SAAkB,IAAkB,MAAM,CAAC,CAAC,CAAC;IAE5D;;;;OAIG;IAEH,uCAAa,GAAb,UAAc,UAAkB,IAAkB,MAAM,CAAC,CAAC,CAAC;IAE3D;;;;OAIG;IAEH,mCAAS,GAAT,UAAU,MAAe,IAAkB,MAAM,CAAC,CAAC,CAAC;IAEpD;;;OAGG;IAEH,mCAAS,GAAT,cAA4B,MAAM,CAAC,CAAC,CAAC;IAErC;;;;;OAKG;IAKH,qCAAW,GAAX,UAAY,GAAW,EAAE,KAAc,IAAkB,MAAM,CAAC,CAAC,CAAC;IAElE;;;;;;;;OAQG;IAKH,mCAAS,GAAT,UAAU,KAAa,EAAE,WAAoB,EAAE,UAAoB,IAAkB,MAAM,CAAC,CAAC,CAAC;IAE9F;;;;;;OAMG;IAEH,4CAAkB,GAAlB,UAAmB,GAAW,EAAE,KAAa,IAAkB,MAAM,CAAC,CAAC,CAAC;IAExE;;;;;;;;;OASG;IAKH,oCAAU,GAAV,UAAW,QAAgB,EAAE,MAAc,EAAE,KAAc,EAAE,KAAc,EAAE,UAAoB,IAAkB,MAAM,CAAC,CAAC,CAAC;IAE5H;;;;;OAKG;IAEH,wCAAc,GAAd,UAAe,WAAmB,EAAE,KAAc,IAAkB,MAAM,CAAC,CAAC,CAAC;IAE7E;;;;;;;OAOG;IAEH,qCAAW,GAAX,UAAY,QAAgB,EAAE,sBAA8B,EAAE,QAAgB,EAAE,KAAa,IAAkB,MAAM,CAAC,CAAC,CAAC;IAExH;;;;;;;;;;OAUG;IAEH,wCAAc,GAAd,UAAe,EAAU,EAAE,WAAmB,EAAE,OAAe,EAAE,GAAW,EAAE,QAAgB,EAAE,YAAoB,IAAkB,MAAM,CAAC,CAAC,CAAC;IAE/I;;;;;;;;;;;OAWG;IAEH,4CAAkB,GAAlB,UAAmB,EAAU,EAAE,IAAY,EAAE,GAAW,EAAE,QAAgB,EAAE,KAAa,EAAE,QAAgB,EAAE,YAAoB,IAAkB,MAAM,CAAC,CAAC,CAAC;IAE5J;;;;OAIG;IAEH,0DAAgC,GAAhC,UAAiC,YAAqB,IAAkB,MAAM,CAAC,CAAC,CAAC;IAE5E,0BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,8BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IArKA;QAJC,OAAO,CAAC;YACP,YAAY,EAAE,CAAC;YACf,UAAU,EAAE,CAAC;SACd,CAAC;;;;6DACyE;IAQ3E;QADC,OAAO,EAAE;;;;iEACsD;IAShE;QADC,OAAO,EAAE;;;;oDACqC;IAQ/C;QADC,OAAO,EAAE;;;;yDACkD;IAQ5D;QADC,OAAO,EAAE;;;;wDACiD;IAQ3D;QADC,OAAO,EAAE;;;;oDAC0C;IAOpD;QADC,OAAO,EAAE;;;;oDAC2B;IAYrC;QAJC,OAAO,CAAC;YACP,YAAY,EAAE,CAAC;YACf,UAAU,EAAE,CAAC;SACd,CAAC;;;;sDACgE;IAelE;QAJC,OAAO,CAAC;YACP,YAAY,EAAE,CAAC;YACf,UAAU,EAAE,CAAC;SACd,CAAC;;;;oDAC4F;IAU9F;QADC,OAAO,EAAE;;;;6DAC8D;IAgBxE;QAJC,OAAO,CAAC;YACP,YAAY,EAAE,CAAC;YACf,UAAU,EAAE,CAAC;SACd,CAAC;;;;qDAC0H;IAS5H;QADC,OAAO,EAAE;;;;yDACmE;IAW7E;QADC,OAAO,EAAE;;;;sDAC8G;IAcxH;QADC,OAAO,EAAE;;;;yDACqI;IAe/I;QADC,OAAO,EAAE;;;;6DACkJ;IAQ5J;QADC,OAAO,EAAE;;;;2EACuE;IA3KtE,eAAe;QAR3B,MAAM,CAAC;YACN,UAAU,EAAE,iBAAiB;YAC7B,MAAM,EAAE,iCAAiC;YACzC,SAAS,EAAE,IAAI;YACf,IAAI,EAAE,sDAAsD;YAC5D,SAAS,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,iBAAiB,CAAC;SAC5D,CAAC;OAEW,eAAe,CAmL3B;IAAD,sBAAC;CAnLD,AAmLC,CAnLoC,iBAAiB,GAmLrD;SAnLY,eAAe","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\n\n/**\n * @name Google Analytics\n * @description\n * This plugin connects to Google's native Universal Analytics SDK\n * Prerequisites:\n * - A Cordova 3.0+ project for iOS and/or Android\n * - A Mobile App property through the Google Analytics Admin Console\n * - (Android) Google Play Services SDK installed via [Android SDK Manager](https://developer.android.com/sdk/installing/adding-packages.html)\n * @usage\n * ```typescript\n * import { GoogleAnalytics } from '@ionic-native/google-analytics';\n *\n * constructor(private ga: GoogleAnalytics) { }\n *\n * ...\n *\n * this.ga.startTrackerWithId('YOUR_TRACKER_ID')\n *    .then(() => {\n *      console.log('Google analytics is ready now');\n        this.ga.trackView('test');\n *      // Tracker is ready\n *      // You can now track pages or set additional information such as AppVersion or UserId\n *    })\n *    .catch(e => console.log('Error starting GoogleAnalytics', e));\n *\n *\n * ```\n */\n@Plugin({\n  pluginName: 'GoogleAnalytics',\n  plugin: 'cordova-plugin-google-analytics',\n  pluginRef: 'ga',\n  repo: 'https://github.com/danwilson/google-analytics-plugin',\n  platforms: ['Android', 'Browser', 'iOS', 'Windows Phone 8']\n})\n\nexport class GoogleAnalytics extends IonicNativePlugin {\n\n  /**\n   * In your 'deviceready' handler, set up your Analytics tracker.\n   * https://developers.google.com/analytics/devguides/collection/analyticsjs/\n   * @param {string}  id  Your Google Analytics Mobile App property\n   * @param {number} interval Optional dispatch period in seconds. Defaults to 30.\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 2,\n    errorIndex: 3\n  })\n  startTrackerWithId(id: string, interval?: number): Promise<any> { return; }\n\n  /**\n   * Enabling Advertising Features in Google Analytics allows you to take advantage of Remarketing, Demographics & Interests reports, and more\n   * @param allow {boolean}\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  setAllowIDFACollection(allow: boolean): Promise<any> { return; }\n\n  /**\n   * Set a UserId\n   * https://developers.google.com/analytics/devguides/collection/analyticsjs/user-id\n   * @param {string} id User ID\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  setUserId(id: string): Promise<any> { return; }\n\n  /**\n   * Set a anonymize Ip address\n   * @param anonymize {boolean} Set to true to anonymize the IP Address\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  setAnonymizeIp(anonymize: boolean): Promise<any> { return; }\n\n  /**\n   * Sets the app version\n   * @param appVersion {string} App version\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  setAppVersion(appVersion: string): Promise<any> { return; }\n\n  /**\n   * Set OptOut\n   * @param optout {boolean}\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  setOptOut(optout: boolean): Promise<any> { return; }\n\n  /**\n   * Enable verbose logging\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  debugMode(): Promise<any> { return; }\n\n  /**\n   * Track custom metric\n   * @param key {number}\n   * @param value {any}\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 2,\n    errorIndex: 3\n  })\n  trackMetric(key: number, value?: number): Promise<any> { return; }\n\n  /**\n   * Track a screen\n   * https://developers.google.com/analytics/devguides/collection/analyticsjs/screens\n   *\n   * @param title {string} Screen title\n   * @param campaignUrl {string} Campaign url for measuring referrals\n   * @param newSession {boolean} Set to true to create a new session\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 3,\n    errorIndex: 4\n  })\n  trackView(title: string, campaignUrl?: string, newSession?: boolean): Promise<any> { return; }\n\n  /**\n   * Add a Custom Dimension\n   * https://developers.google.com/analytics/devguides/platform/customdimsmets\n   * @param key {number}\n   * @param value {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  addCustomDimension(key: number, value: string): Promise<any> { return; }\n\n  /**\n   * Track an event\n   * https://developers.google.com/analytics/devguides/collection/analyticsjs/events\n   * @param category {string}\n   * @param action {string}\n   * @param label {string}\n   * @param value {number}\n   * @param newSession {boolean} Set to true to create a new session\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 5,\n    errorIndex: 6\n  })\n  trackEvent(category: string, action: string, label?: string, value?: number, newSession?: boolean): Promise<any> { return; }\n\n  /**\n   * Track an exception\n   * @param description {string}\n   * @param fatal {boolean}\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  trackException(description: string, fatal: boolean): Promise<any> { return; }\n\n  /**\n   * Track User Timing (App Speed)\n   * @param category {string}\n   * @param intervalInMilliseconds {number}\n   * @param variable {string}\n   * @param label {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  trackTiming(category: string, intervalInMilliseconds: number, variable: string, label: string): Promise<any> { return; }\n\n  /**\n   * Add a Transaction (Ecommerce)\n   * https://developers.google.com/analytics/devguides/collection/analyticsjs/ecommerce#addTrans\n   * @param id {string}\n   * @param affiliation {string}\n   * @param revenue {number}\n   * @param tax {number}\n   * @param shipping {number}\n   * @param currencyCode {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  addTransaction(id: string, affiliation: string, revenue: number, tax: number, shipping: number, currencyCode: string): Promise<any> { return; }\n\n  /**\n   * Add a Transaction Item (Ecommerce)\n   * https://developers.google.com/analytics/devguides/collection/analyticsjs/ecommerce#addItem\n   * @param {string}  id\n   * @param {string}  name\n   * @param {string}  sku\n   * @param {string}  category\n   * @param {number}  price\n   * @param {number}  quantity\n   * @param {string}  currencyCode\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  addTransactionItem(id: string, name: string, sku: string, category: string, price: number, quantity: number, currencyCode: string): Promise<any> { return; }\n\n  /**\n   * Enable/disable automatic reporting of uncaught exceptions\n   * @param shouldEnable {boolean}\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  enableUncaughtExceptionReporting(shouldEnable: boolean): Promise<any> { return; }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}